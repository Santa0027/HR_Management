# Generated by Django 5.2.4 on 2025-07-06 09:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Unique username for driver mobile login', max_length=50, unique=True)),
                ('password_hash', models.CharField(help_text='Hashed password', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Can the driver login to mobile app?')),
                ('is_locked', models.BooleanField(default=False, help_text='Account locked due to failed attempts')),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('password_changed_at', models.DateTimeField(auto_now_add=True)),
                ('last_login_device', models.CharField(blank=True, max_length=255, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Driver Authentication',
                'verbose_name_plural': 'Driver Authentications',
                'ordering': ['driver__driver_name'],
            },
        ),
        migrations.CreateModel(
            name='DriverLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('remarks', models.TextField(blank=True, help_text='Admin or HR remarks for approval, rejection, or additional notes')),
                ('driver_name', models.CharField(max_length=255)),
                ('driver_profile_img', models.FileField(blank=True, null=True, upload_to='drivers/profileimg/')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('iqama', models.CharField(max_length=100, unique=True)),
                ('mobile', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=100)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('iqama_document', models.FileField(blank=True, null=True, upload_to='drivers/iqama/')),
                ('iqama_expiry', models.DateField(blank=True, null=True)),
                ('passport_document', models.FileField(blank=True, null=True, upload_to='drivers/passport/')),
                ('passport_expiry', models.DateField(blank=True, null=True)),
                ('license_document', models.FileField(blank=True, null=True, upload_to='drivers/license/')),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('visa_document', models.FileField(blank=True, null=True, upload_to='drivers/visa/')),
                ('visa_expiry', models.DateField(blank=True, null=True)),
                ('medical_document', models.FileField(blank=True, null=True, upload_to='drivers/medical/')),
                ('medical_expiry', models.DateField(blank=True, null=True)),
                ('insurance_paid_by', models.CharField(blank=True, choices=[('own', 'Own'), ('company', 'Company')], help_text="Who pays for the driver's insurance?", max_length=10, null=True)),
                ('accommodation_paid_by', models.CharField(blank=True, choices=[('own', 'Own'), ('company', 'Company')], help_text="Who pays for the driver's accommodation rent?", max_length=10, null=True)),
                ('phone_bill_paid_by', models.CharField(blank=True, choices=[('own', 'Own'), ('company', 'Company')], help_text="Who pays for the driver's phone bill?", max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drivers', to='company.company')),
            ],
        ),
    ]
